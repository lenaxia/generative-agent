# Universal Agent System Configuration
# Clean configuration for StrandsAgent-based Universal Agent system

# Framework Configuration
framework:
  type: "strands"

# Architecture Configuration (Phase 4: Production Deployment)
architecture:
  threading_model: "single_event_loop"
  role_system: "single_file"
  llm_development: true

# LLM Provider Configuration
llm_providers:
  # Bedrock Configuration
  bedrock:
    # Model mapping for semantic types
    models:
      WEAK: "anthropic.claude-3-haiku-20240307-v1:0" # Faster model for routing
      DEFAULT: "us.anthropic.claude-3-5-sonnet-20241022-v2:0" # Fixed: Use Sonnet 3.5 instead of Sonnet 4
      STRONG: "us.anthropic.claude-3-5-sonnet-20241022-v2:0" # Fixed: Use Sonnet 3.5 instead of Sonnet 4

    # Default parameters
    parameters:
      temperature: 0.3
      max_tokens: 4096
      region: "us-west-2"

    # Agent pool configuration
    agent_pool:
      enabled: true
      warm_on_startup: true
      max_pool_size: 10
      cleanup_interval: 3600 # 1 hour

  # OpenAI Configuration (optional)
  openai:
    models:
      WEAK: "gpt-3.5-turbo"
      DEFAULT: "gpt-4"
      STRONG: "gpt-4-turbo"

    parameters:
      temperature: 0.3
      max_tokens: 4096

# Universal Agent Configuration
universal_agent:
  # Performance settings
  performance:
    max_concurrent_agents: 5

# Dynamic Role System Configuration
role_system:
  # Single file role discovery
  roles_directory: "roles"
  role_pattern: "*.py" # Look for Python files, not directories

  # LLM development features
  auto_discovery: true
  validate_role_structure: true
  enforce_patterns: true

  # Role registry settings
  registry:
    auto_refresh: true # Automatically refresh roles on startup
    cache_definitions: true # Cache role definitions in memory
    validate_on_load: true # Validate role definitions when loading

  # Shared tools configuration
  shared_tools:
    directory: "roles/shared_tools"
    auto_discover: true # Automatically discover @tool functions

  # Role selection settings
  selection:
    use_llm_selection: true # Use LLM for intelligent role selection
    fallback_role: "default" # Fallback when no role matches
    selection_model: "WEAK" # Model type for role selection (cost optimization)

  # LLM-friendly single-file role configuration
  single_file_roles:
    enabled: true # Enable single-file role pattern
    role_pattern: "*.py" # Look for Python files, not directories
    auto_discovery: true # Auto-discover register_role() functions
    validate_structure: true # Validate role follows template structure
    enforce_patterns: true # Enforce LLM-friendly patterns

# TaskGraph Configuration
task_graph:
  max_history_size: 1000 # Maximum number of history entries to keep
  enable_progressive_summary: true # Enable progressive summary functionality
  checkpoint_compression: true # Compress checkpoint data
  agent_timeout: 300 # 5 minutes
  enable_caching: true
# Production Configuration (Phase 4: Threading Architecture)
production:
  threading:
    heartbeat_interval: 30
    timer_check_interval: 5
    max_scheduled_tasks: 10
    task_timeout: 300

  monitoring:
    track_intent_processing: true
    log_handler_performance: true
    validate_intent_schemas: true

# Intent Processing Configuration
intent_processing:
  enabled: true
  validate_intents: true
  timeout_seconds: 30

  cache_ttl: 3600 # 1 hour

# Task Management Configuration
task_management:
  max_concurrent_tasks: 5
  task_timeout: 300
  enable_pause_resume: true
  checkpoint_interval: 60
  max_retries: 3
  retry_delay: 1.0

# Request Manager Configuration
request_manager:
  max_active_requests: 20
  request_timeout: 1800 # 30 minutes
  cleanup_interval: 300 # 5 minutes

# Message Bus Configuration
message_bus:
  max_subscribers: 100
  queue_size: 1000
  enable_persistence: false

  # Intent processing configuration
  intent_processing:
    enabled: true
    validate_intents: true
    timeout_seconds: 30
    max_concurrent_intents: 50

# Logging Configuration
logging:
  level: "INFO"
  log_file: "logs/supervisor.log"
  log_file_max_size: 1024
  disable_console_logging: false

  # Structured logging
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"

  # Component-specific log levels
  loggers:
    llm_provider: "INFO"
    supervisor: "INFO"
    universal_agent: "INFO"
    workflow_duration_logger: "INFO"
    role_registry: "WARNING"
    communication_manager: "WARNING"
    timer_single_file: "WARNING"
    common.communication_manager: "WARNING"
    llm_provider.role_registry: "WARNING"
    roles.timer_single_file: "WARNING"

# Workflow Duration Logging Configuration
workflow_duration_logging:
  enabled: true
  log_file: "logs/workflow_durations.jsonl"
  max_log_file_size_mb: 100
  enable_console_logging: true

  # Performance monitoring settings
  performance_monitoring:
    track_cli_workflows: true
    track_slack_workflows: true
    track_api_workflows: true

  # Analytics and reporting
  analytics:
    enable_performance_summary: true
    summary_interval_hours: 24
    retention_days: 30

  # Log rotation settings
  rotation:
    enabled: true
    backup_count: 5
    compress_backups: true

# MCP Integration
mcp:
  enabled: false
  config_file: "config/mcp_config.yaml"

# Heartbeat Configuration
heartbeat:
  enabled: true
  interval: 30 # Heartbeat interval in seconds
  health_check_interval: 60 # Health check interval in seconds

  # Maintenance settings
  maintenance:
    cleanup_old_workflows: true
    workflow_retention_hours: 24
    cleanup_old_logs: true
    log_retention_days: 30
    cleanup_old_checkpoints: true
    checkpoint_retention_days: 7

# Communication Configuration
communication:
  http_client:
    thread_safe_fallback: true
    timeout_seconds: 10
    max_retries: 3

  slack:
    use_shared_session: true # Phase 2: Enable shared session pooling
    session_pool_size: 5 # Connection pool size for better performance

# Feature Flags
feature_flags:
  enable_universal_agent: true
  enable_mcp_integration: false
  enable_task_scheduling: true
  enable_pause_resume: true
  enable_heartbeat: true
  enable_intent_processing: true # Enable new intent-based architecture
  enable_single_event_loop: true # Enable single event loop threading model
  enable_context_awareness: true # Enable context-aware request processing
  enable_memory_assessment: true # Enable LLM-based memory importance assessment
  enable_location_tracking: true # Enable MQTT location tracking

# Household Assistant Configuration
household_assistant:
  enabled: true

  context_awareness:
    enabled: true

  memory:
    provider: "redis"
    retention_days: 30
    importance_threshold: 0.3

  location:
    provider: "mqtt"
    mqtt_broker: "homeassistant.local"
    mqtt_port: 1883
    mqtt_username: "${MQTT_USERNAME}"
    mqtt_password: "${MQTT_PASSWORD}"

  context_types:
    location: true
    recent_memory: true
    presence: true
    schedule: true

# Fast-Path Routing Configuration
fast_path:
  enabled: true
  confidence_threshold: 0.7 # Minimum confidence for fast-path routing
  max_response_time: 3.0 # Realistic target with Agent pooling only
  fallback_on_error: true # Fall back to planning on fast-path errors

  # Performance optimizations
  performance:
    agent_pool_warming: true # Pre-warm Agent pool at startup
    pre_warm_metrics_client: true # Pre-create MetricsClient during startup to avoid workflow latency
    skip_telemetry: false # Keep telemetry for monitoring
    minimal_logging: false # Keep logging for debugging

  # Monitoring
  monitoring:
    track_agent_pool_efficiency: true
    track_context_switch_performance: true

  # Logging and monitoring
  log_routing_decisions: true
  track_performance_metrics: true

# Redis Configuration
redis:
  enabled: true
  connection:
    host: "localhost"
    port: 6379
    db: 0
    password: ""
    socket_timeout: 5
    socket_connect_timeout: 5
    socket_keepalive: true
    socket_keepalive_options: {}
    retry_on_timeout: true
    health_check_interval: 30

  # Development settings
  development:
    # Use Docker container when available
    docker_host: "localhost"
    docker_port: 6379

  # Performance settings
  performance:
    max_connections: 50
    connection_pool_timeout: 20
    socket_timeout: 5

  # Monitoring
  monitoring:
    enable_health_checks: true
    log_slow_queries: true
    slow_query_threshold_ms: 100

# Development Settings
development:
  debug_mode: false
  mock_llm_responses: false
  enable_profiling: false

  # Docker development settings
  docker:
    redis_container_name: "generative-agent-redis"
    redis_commander_enabled: false

# Environment Variables for Tools
environment:
  # Disable interactive prompts for shell tool
  STRANDS_NON_INTERACTIVE: "true"
  BYPASS_TOOL_CONSENT: "true"
