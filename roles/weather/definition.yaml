# Weather Role Definition - Enhanced Hybrid Pattern

# Role Metadata
role:
  name: "weather"
  version: "2.0.0"
  description: "Weather role with pre-processing data fetching and post-processing formatting"
  execution_type: "hybrid"  # Changed from "llm" to "hybrid"
  fast_reply: true  # Enable fast-path routing for weather queries
  author: "system@generative-agent"
  when_to_use: |
    Use this role when you need to:
    - Get current weather conditions for any location
    - Retrieve weather forecasts
    - Convert location formats (city names, ZIP codes, coordinates)
    - Validate weather data and coordinates
    - Provide weather-related information and analysis

# Enhanced parameter schema for routing extraction
parameters:
  location:
    type: "string"
    required: true
    description: "City, state, country, or coordinates for weather lookup"
    examples: ["Seattle", "New York, NY", "90210", "47.6062,-122.3321"]
  
  timeframe:
    type: "string"
    required: false
    description: "When to get weather for"
    examples: ["current", "today", "tomorrow", "this week"]
    enum: ["current", "today", "tomorrow", "this week", "next week"]
    default: "current"
  
  format:
    type: "string"
    required: false
    description: "Output format preference"
    enum: ["brief", "detailed", "forecast"]
    default: "brief"

# Lifecycle hooks for hybrid execution
lifecycle:
  pre_processing:
    enabled: true
    functions:
      - name: "fetch_weather_data"
        uses_parameters: ["location", "timeframe"]
      - name: "validate_location"
        uses_parameters: ["location"]
    data_injection: true  # Inject results into LLM context
    
  post_processing:
    enabled: true
    functions:
      - name: "format_for_tts"
        description: "Format response for text-to-speech"
      - name: "pii_scrubber"
        description: "Remove sensitive data"
      - name: "audit_log"
        description: "Log interaction for compliance"

# Enhanced system prompt with pre-processed data
prompts:
  system: |
    You are a weather specialist. The weather data has already been fetched
    and is available in your context as pre-processed data. Focus on interpreting
    and explaining this data rather than fetching it.
    
    Available data:
    - Current weather: {weather_current}
    - Location resolved: {location_resolved}
    - Data timestamp: {data_timestamp}
    - Timeframe requested: {timeframe_requested}
    
    Interpret and explain this weather data in a natural, conversational way.
    Focus on what the user needs to know about the weather conditions.
    Always respond in natural language as your output will be converted to text to speech.

# Model Parameters
model_config:
  temperature: 0.1              # Low temperature for factual weather data
  max_tokens: 2048             # Standard token limit for weather responses
  max_context: 32000           # Sufficient context for weather queries
  top_p: 0.9                   # Focused sampling for accurate data

# Tool Configuration - No weather tools needed since data is pre-fetched
tools:
  automatic: false
  shared: []  # No need for weather tools since data is pre-fetched

# Basic Capabilities
capabilities:
  max_iterations: 5
  timeout_seconds: 120

# Logging Configuration
logging:
  level: "INFO"
  include_tool_calls: true
